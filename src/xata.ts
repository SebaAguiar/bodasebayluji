// Generated by Xata Codegen 0.28.4. Please do not edit.
import { buildClient } from '@xata.io/client';
import type {
  BaseClientOptions,
  SchemaInference,
  XataRecord,
} from '@xata.io/client';

const tables = [
  { name: 'Tables', columns: [{ name: 'number', type: 'int' }] },
  {
    name: 'Emails',
    columns: [
      { name: 'fullname', type: 'string' },
      { name: 'subject', type: 'string' },
      { name: 'email', type: 'email' },
      { name: 'message', type: 'text' },
    ],
  },
  {
    name: 'Users',
    columns: [
      { name: 'NOMBRE', type: 'string' },
      { name: 'APELLIDOS', type: 'string' },
      { name: 'EMAIL', type: 'email' },
      { name: 'TELFONO', type: 'string' },
      { name: 'CELULAR', type: 'string' },
      { name: 'GRUPO', type: 'string' },
      { name: 'INVITADO', type: 'string' },
      { name: 'CONFIRMADO', type: 'string' },
      { name: 'EDAD', type: 'string' },
      { name: 'DIRECCIN', type: 'string' },
      { name: 'CODPOSTAL', type: 'string' },
      { name: 'CIUDAD', type: 'string' },
      { name: 'PROVINCIA', type: 'string' },
      { name: 'MESA', type: 'string' },
      { name: 'SEXO', type: 'string' },
    ],
  },
] as const;

export type SchemaTables = typeof tables;
export type InferredTypes = SchemaInference<SchemaTables>;

export type Tables = InferredTypes['Tables'];
export type TablesRecord = Tables & XataRecord;

export type Emails = InferredTypes['Emails'];
export type EmailsRecord = Emails & XataRecord;

export type Users = InferredTypes['Users'];
export type UsersRecord = Users & XataRecord;

export type DatabaseSchema = {
  Tables: TablesRecord;
  Emails: EmailsRecord;
  Users: UsersRecord;
};

const DatabaseClient = buildClient();

const defaultOptions = {
  databaseURL: process.env.XATA_DATABASE_URL,
};

export class XataClient extends DatabaseClient<DatabaseSchema> {
  constructor(options?: BaseClientOptions) {
    super({ ...defaultOptions, ...options }, tables);
  }
}

let instance: XataClient | undefined = undefined;

export const getXataClient = () => {
  if (instance) return instance;

  instance = new XataClient();
  return instance;
};

export const xata = getXataClient();

/****************************************************************************************************************************************************
 * * IMPORTS
 ****************************************************************************************************************************************************/

import { publicProcedure } from '@/server/trpc';
import { xata } from '@/xata';
import { UsersTable } from '@/utils/tables';
import { z } from 'zod';

/****************************************************************************************************************************************************
 * * TYPES - INTERFACES - CLASES
 ****************************************************************************************************************************************************/

/****************************************************************************************************************************************************
 * * DECLARATIONS
 ****************************************************************************************************************************************************/

/****************************************************************************************************************************************************
 * * FUNCTIONS
 ****************************************************************************************************************************************************/

/****************************************************************************************************************************************************
 * * EXPORTS
 ****************************************************************************************************************************************************/
export const getUsers = publicProcedure.query(async () => {
  return await xata.db[UsersTable].select([]).getAll();
});

export const getUser = publicProcedure
  .input(
    z.object({
      name: z.string(),
      lastName: z.string(),
    }),
  )
  .query(async ({ input }) => {
    try {
      const { name, lastName } = input;

      if (name && !lastName) {
        return await xata.db[UsersTable].select([])
          .filter({ NOMBRE: { $iContains: name } })
          .getMany();
      }
      if (lastName && !name) {
        return await xata.db[UsersTable].select([])
          .filter({ APELLIDOS: { $iContains: lastName } })
          .getMany();
      }
      if (lastName && name) {
        return await xata.db[UsersTable].select([])
          .filter(
            {
              NOMBRE: { $iContains: name },
            } && {
              APELLIDOS: { $iContains: lastName },
            },
          )
          .getMany();
      }
    } catch (error) {
      console.log(error);
    }
  });

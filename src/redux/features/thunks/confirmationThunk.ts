/****************************************************************************************************************************************************
 * * IMPORTS
 ****************************************************************************************************************************************************/

import { createAsyncThunk } from '@reduxjs/toolkit';
import { TypeUser } from '@/utils/types';
import { trpc } from '@/utils/trpc';

/****************************************************************************************************************************************************
 * * TYPES - INTERFACES - CLASES
 ****************************************************************************************************************************************************/

type TypeState = {
  guests: TypeUser[];
};

/****************************************************************************************************************************************************
 * * DECLARATIONS
 ****************************************************************************************************************************************************/

/****************************************************************************************************************************************************
 * * FUNCTIONS
 ****************************************************************************************************************************************************/

/****************************************************************************************************************************************************
 * * EXPORTS
 ****************************************************************************************************************************************************/
export const getGuests = createAsyncThunk(
  'getGuests',
  async (_, { getState }) => {
    const state = getState() as TypeState;
    try {
      if (!state.guests.length) {
        return await trpc.user.getUsers.query();
      }
    } catch (error) {
      console.error(error);
      return [];
    }
  },
);
